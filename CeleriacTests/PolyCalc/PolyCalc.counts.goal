RatNum..ctor(System.Int32\_n) ENTER/6: 12 EXIT11/24: 12
RatNum..ctor(System.Int32\_n,\_System.Int32\_d) ENTER/9: 999 EXIT19/27: 567 EXIT42/27: 353 EXIT56/27: 79
RatNum.CompareTo(RatNum\_rn) ENTER/27: 205 EXIT17/36: 39 EXIT28/36: 66 EXIT39/36: 66 EXIT48/36: 34
RatNum.Equals(System.Object\_obj) ENTER/21: 35 EXIT30/30: 9 EXIT46/30: 26
RatNum.add(RatNum\_arg) ENTER/27: 385 EXIT19/45: 385
RatNum.approx() ENTER/15: 8 EXIT21/24: 8
RatNum.debugPrint() ENTER/15: 3 EXIT31/27: 3
RatNum.div(RatNum\_arg) ENTER/27: 179 EXIT11/45: 89 EXIT25/45: 90
RatNum.gcd(System.Int32\__a,\_System.Int32\__b) ENTER/9: 432 EXIT37/18: 432
RatNum.isNaN() ENTER/15: 1656 EXIT6/24: 1656
RatNum.isNegative() ENTER/15: 15 EXIT12/24: 15
RatNum.isPositive() ENTER/15: 15 EXIT12/24: 15
RatNum.mul(RatNum\_arg) ENTER/27: 234 EXIT13/45: 234
RatNum.negate() ENTER/15: 241 EXIT8/33: 241
RatNum.parse(System.String\_ratStr) ENTER/9: 20 EXIT18/27: 2 EXIT32/27: 4 EXIT51/27: 14
RatNum.sub(RatNum\_arg) ENTER/27: 205 EXIT6/45: 205
RatNum.toString() ENTER/15: 3 EXIT4/27: 3
RatNum.unparse() ENTER/15: 832 EXIT11/27: 554 EXIT29/27: 132 EXIT35/27: 146
RatNumTest..ctor(System.String\_name) ENTER/9: 1 EXIT263/327: 1
RatNumTest.Main(System.String[]\_args) ENTER/12: 1 EXIT50/18: 1
RatNumTest.approxEq(System.Double\_d1,\_System.Double\_d2) ENTER/321: 8 EXIT10/327: 8
RatNumTest.assertEquals(System.Object\_a,\_System.Object\_b) ENTER/327: 768 EXIT7/333: 768
RatNumTest.assertGreater(RatNum\_larger,\_RatNum\_smaller) ENTER/339: 79 EXIT17/345: 79
RatNumTest.assertNeg(RatNum\_n) ENTER/327: 2 EXIT13/333: 2
RatNumTest.assertPos(RatNum\_n) ENTER/327: 12 EXIT13/333: 12
RatNumTest.assertTrue(System.Boolean\_a) ENTER/318: 1066 EXIT4/324: 1066
RatNumTest.decChk(System.String\_s,\_RatNum\_expected) ENTER/333: 20 EXIT8/339: 20
RatNumTest.eq(RatNum\_ratNum,\_System.String\_rep) ENTER/333: 768 EXIT7/339: 768
RatNumTest.testAddComplex() ENTER/315: 1 EXIT100/321: 1
RatNumTest.testAddImproper() ENTER/315: 1 EXIT37/321: 1
RatNumTest.testAddOnNaN() ENTER/315: 1 EXIT63/321: 1
RatNumTest.testAddSimple() ENTER/315: 1 EXIT64/321: 1
RatNumTest.testAddTransitively() ENTER/315: 1 EXIT145/321: 1
RatNumTest.testApprox() ENTER/315: 1 EXIT66/321: 1
RatNumTest.testCompareToFract() ENTER/315: 1 EXIT57/321: 1
RatNumTest.testCompareToNaNs() ENTER/315: 1 EXIT80/321: 1
RatNumTest.testCompareToNonFract() ENTER/315: 1 EXIT36/321: 1
RatNumTest.testCompareToReflexive() ENTER/315: 1 EXIT33/321: 1
RatNumTest.testDivComplex() ENTER/315: 1 EXIT100/321: 1
RatNumTest.testDivImproper() ENTER/315: 1 EXIT28/321: 1
RatNumTest.testDivOnNaN() ENTER/315: 1 EXIT63/321: 1
RatNumTest.testDivSimple() ENTER/315: 1 EXIT64/321: 1
RatNumTest.testDivTransitively() ENTER/315: 1 EXIT145/321: 1
RatNumTest.testEquals() ENTER/315: 1 EXIT229/321: 1
RatNumTest.testEqualsReflexive() ENTER/315: 1 EXIT31/321: 1
RatNumTest.testIsNaN() ENTER/315: 1 EXIT55/321: 1
RatNumTest.testIsPosAndIsNeg() ENTER/315: 1 EXIT87/321: 1
RatNumTest.testMulComplex() ENTER/315: 1 EXIT46/321: 1
RatNumTest.testMulImproper() ENTER/315: 1 EXIT37/321: 1
RatNumTest.testMulOnNaN() ENTER/315: 1 EXIT63/321: 1
RatNumTest.testMulProperties() ENTER/315: 1 EXIT139/321: 1
RatNumTest.testMulSimple() ENTER/315: 1 EXIT28/321: 1
RatNumTest.testMulTransitively() ENTER/315: 1 EXIT145/321: 1
RatNumTest.testNegate() ENTER/315: 1 EXIT99/321: 1
RatNumTest.testOneArgCtor() ENTER/315: 1 EXIT43/321: 1
RatNumTest.testParse() ENTER/315: 1 EXIT121/321: 1
RatNumTest.testReduction() ENTER/315: 1 EXIT46/321: 1
RatNumTest.testSubComplex() ENTER/315: 1 EXIT46/321: 1
RatNumTest.testSubImproper() ENTER/315: 1 EXIT19/321: 1
RatNumTest.testSubOnNaN() ENTER/315: 1 EXIT63/321: 1
RatNumTest.testSubSimple() ENTER/315: 1 EXIT73/321: 1
RatNumTest.testSubTransitively() ENTER/315: 1 EXIT145/321: 1
RatNumTest.testToString() ENTER/315: 1 EXIT25/321: 1
RatNumTest.testTwoArgCtor() ENTER/315: 1 EXIT55/321: 1
RatNumTest.testTwoArgCtorOnNaN() ENTER/315: 1 EXIT46/321: 1
